{"version":3,"sources":["components/SearchBar.js","images/NoImage.jpg","components/MovieCard.js","components/MovieList.js","components/Footer.js","components/NominatedListItem.js","components/ReachedFiveNominations.js","components/NominationList.js","images/background.jpg","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","input","borderRadius","height","backgroundColor","borderStyle","width","color","outline","fontSize","paddingLeft","paddingRight","containerCard","minWidth","border","boxShadow","display","marginLeft","justifyContent","SearchBar","query","setQuery","classes","Card","className","onSubmit","e","preventDefault","style","Input","value","onChange","target","placeholder","disableUnderline","startAdornment","InputAdornment","position","card","margin","cardMedia","paddingTop","marginTop","cardHeader","MovieCard","movie","nominateMovie","nominatedMovies","enqueueSnackbar","useSnackbar","poster","Poster","DefaultImg","imdbURL","imdbID","CardActions","onClick","window","open","CardActionArea","CardContent","Typography","Title","CardMedia","image","Button","fullWidth","variant","length","handleAddingNomination","disabled","includes","moviesListBox","minHeight","maxHeight","overflow","flexWrap","MovieList","movies","page","handlePageChange","totalResult","movieList","undefined","map","idx","movieListHeader","CardHeader","title","subheader","pagination","Pagination","marginBottom","count","Math","ceil","anchorOrigin","vertical","horizontal","preventDuplicate","Grid","container","item","xs","Divider","Footer","AppBar","Toolbar","avatar","marginRight","NominatedListItem","handleRemove","nominationList","useEffect","ListItem","ListItemAvatar","alt","src","ListItemText","primary","secondary","component","Year","ListItemSecondaryAction","Tooltip","TransitionComponent","Zoom","IconButton","edge","ReachedFiveNominations","show","Box","Collapse","in","Alert","severity","AlertTitle","align","theme","nominatedListBox","button","spacing","NominationList","setNominatedMovies","canAddNomination","movieID","newState","filter","m","nominationInfo","startIcon","size","alignItems","List","mainFeaturedPost","palette","grey","common","white","backgroundImage","backgroundImg","backgroundSize","backgroundRepeat","backgroundPosition","overlay","top","bottom","right","left","mainFeaturedPostContent","padding","breakpoints","up","Header","Paper","md","gutterBottom","fontWeight","paragraph","createMuiTheme","type","App","useState","setMovies","searchQuery","setSearchQuery","setPage","setTotalResult","getMovies","fetch","then","res","json","data","Search","totalResults","ThemeProvider","CssBaseline","sm","lg","xl","event","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f44c5001.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, Input, InputAdornment } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles({\n  input: {\n    borderRadius: \"20px\",\n    height: \"40px\",\n    backgroundColor: \"rgba(0, 0, 0, 0.1)\",\n    borderStyle: \"none\",\n    width: \"100%\",\n    color: \"white\",\n    outline: \"none\",\n    fontSize: 20,\n    paddingLeft: \"30px\",\n    paddingRight: \"30px\",\n  },\n  containerCard: {\n    width: \"50%\",\n    minWidth: \"200px\",\n    backgroundColor: \"rgba(48, 48, 48, 0.1)\",\n    border: \"none\",\n    boxShadow: \"none\",\n    display: \"flex\",\n    marginLeft: \"25%\",\n    justifyContent: \"center\",\n  },\n});\n\nconst SearchBar = ({ query, setQuery }) => {\n  const classes = useStyles();\n  const handleOnChange = (e) => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <>\n      <Card className={classes.containerCard}>\n        <form onSubmit={(e) => e.preventDefault()} style={{ width: \"100%\" }}>\n          <Input\n            className={classes.input}\n            value={query}\n            onChange={handleOnChange}\n            placeholder=\"Search\"\n            disableUnderline\n            startAdornment={\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            }\n          />\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default SearchBar;\n","export default __webpack_public_path__ + \"static/media/NoImage.e17fd2f9.jpg\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DefaultImg from \"../images/NoImage.jpg\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  Card,\n  CardMedia,\n  CardContent,\n  CardActions,\n  CardActionArea,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  card: {\n    width: 250,\n    height: 400,\n    margin: \"8px\",\n    backgroundColor: \"rgba(0, 0, 0, 0.1)\",\n  },\n  cardMedia: {\n    width: \"100%\",\n    height: 250,\n    display: \"block\",\n    paddingTop: \"56.25%\",\n    marginTop: \"10px\",\n  },\n  cardHeader: {\n    color: \"white\",\n    backgroundColor: \"rgba 0 0 0 0.1\",\n  },\n});\n\nconst MovieCard = ({ movie, nominateMovie, nominatedMovies }) => {\n  const classes = useStyles();\n\n  // Notification if wants to add movies afer 5 movies\n  const { enqueueSnackbar } = useSnackbar();\n  const handleAddingNomination = (nominatedMovies, movie) => {\n    const message =\n      \"You've nominated maxmium number of movies. Delete items from nominations list to add more.\";\n    const snackbarColor = { variant: \"error\" };\n\n    nominatedMovies.length === 5\n      ? enqueueSnackbar(message, snackbarColor)\n      : nominateMovie([...nominatedMovies, movie]);\n  };\n\n\n  // default movie poster\n  const poster = movie?.Poster === \"N/A\" ? DefaultImg : movie.Poster;\n\n  //imdb Redirects\n  const imdbURL = `https://imdb.com/title/${movie.imdbID}`\n\n\n  return (\n    <Card className={classes.card} key={(movie.imdbID)}>\n      <CardActions\n        onClick={() => window.open(imdbURL)}\n      >\n        <CardActionArea>\n          <CardContent>\n            <Typography>{movie.Title}</Typography>\n          </CardContent>\n          <CardMedia className={classes.cardMedia} image={poster} />\n        </CardActionArea>\n      </CardActions>\n      <CardContent>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          style={{ color: \"red\" }}\n          onClick={() => handleAddingNomination(nominatedMovies, movie)}\n          disabled={nominatedMovies.includes(movie)}\n        >\n          NOMINATE\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default MovieCard;\n","import React from \"react\";\nimport MovieCard from \"./MovieCard\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardHeader, Divider, Grid } from \"@material-ui/core\";\nimport { SnackbarProvider } from \"notistack\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst useStyles = makeStyles({\n  moviesListBox: {\n    minHeight: \"40vh\",\n    maxHeight: \"100vh\",\n    overflow: \"auto\",\n    margin: 20,\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\",\n  },\n});\n\nconst MovieList = ({ movies, nominateMovie, nominatedMovies, query, page, handlePageChange, totalResult }) => {\n  const classes = useStyles();\n\n  const movieList = (\n    <>\n      {movies === undefined || movies.length === 0 ? (\n        <></>\n      ) : (\n        movies.map((movie, idx) => {\n          return (\n            <MovieCard\n              key={idx}\n              movie={movie}\n              nominateMovie={nominateMovie}\n              nominatedMovies={nominatedMovies}\n            />\n          );\n        })\n      )}\n    </>\n  );\n\n  const movieListHeader = (\n    <>\n      {movies === undefined || movies.length === 0 ? (\n        <CardHeader\n          title=\"Search By Movie Name.\"\n          subheader=\"Use 3 or more character.\"\n        />\n      ) : (\n        <CardHeader title={`Search result for \"${query}\"`} />\n      )}\n    </>\n  );\n\n  const pagination = movies?.length ? \n  <Pagination \n    style={{marginBottom: '10px'}}\n    page={page}\n    count={Math.ceil(totalResult/10)}\n    onChange={handlePageChange}\n  /> : ''\n\n  return (\n    <SnackbarProvider\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n      preventDuplicate\n    >\n      <Card className={classes.moviesListBox}>\n        <Grid container>\n          <Grid item xs={12}>\n            {movieListHeader}\n            <Divider variant=\"middle\" />\n          </Grid>\n        </Grid>\n        <Grid container>\n          {movieList}\n        </Grid>\n          {pagination}\n      </Card>\n    </SnackbarProvider>\n  );\n};\n\nexport default MovieList;\n","import React from \"react\";\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\n\nconst Footer = () => {\n  return (\n    <AppBar position=\"static\" color=\"transparent\">\n      <Toolbar>\n        <Typography variant=\"body1\">© 2020 Shoppies</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Footer;\n","import React, {useEffect} from \"react\";\nimport DefaultImg from \"../images/NoImage.jpg\";\nimport {\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  Typography,\n  IconButton,\n  Divider,\n} from \"@material-ui/core\";\nimport DeleteForeverRoundedIcon from \"@material-ui/icons/DeleteForeverRounded\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nconst useStyles = makeStyles({\n  avatar: {\n    width: \"50px\",\n    height: \"auto\",\n    marginRight: \"10px\",\n  },\n});\n\nconst NominatedListItem = ({ movie, handleRemove, nominationList }) => {\n  const classes = useStyles();\n  const poster = movie?.Poster === \"N/A\" ? DefaultImg : movie.Poster;\n  \n  useEffect(() => {\n    handleRemove();\n  }, [handleRemove]);\n\n  return (\n    <>\n      <ListItem>\n        <ListItemAvatar>\n          <img alt={movie.Title} src={poster} className={classes.avatar} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={movie.Title}\n          secondary={\n            <Typography\n              component=\"span\"\n              variant=\"body2\"\n              color=\"textPrimary\"\n              style={{ display: \"inline\" }}\n            >\n              {movie.Year}\n            </Typography>\n          }\n        />\n        <ListItemSecondaryAction>\n          <Tooltip TransitionComponent={Zoom} title=\"DELETE\">\n            <IconButton\n              edge=\"end\"\n              onClick={() => handleRemove(nominationList, movie.imdbID)}\n            >\n              <DeleteForeverRoundedIcon\n                style={{ color: \"#e53935\", fontSize: 28 }}\n              />\n            </IconButton>\n          </Tooltip>\n        </ListItemSecondaryAction>\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n    </>\n  );\n};\n\nexport default NominatedListItem;\n","import React from \"react\";\nimport { Box, Collapse, Typography } from \"@material-ui/core\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nconst ReachedFiveNominations = ({ show }) => {\n  return (\n    <Box>\n      <Collapse in={ show }>\n        <Alert severity=\"success\">\n          <AlertTitle>\n            <Typography align=\"left\">\n              <strong>Thank You!</strong>\n            </Typography>\n          </AlertTitle>\n          <Typography align=\"left\">You have selected 5 movies.</Typography>\n        </Alert>\n      </Collapse>\n    </Box>\n  );\n};\n\nexport default ReachedFiveNominations;\n","import React from \"react\";\nimport NominatedListItem from \"./NominatedListItem\";\nimport ReachedFiveNominations from './ReachedFiveNominations'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Grid,\n  Typography,\n  Button,\n  List,\n  CardContent,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { SnackbarProvider } from \"notistack\";\n\nconst useStyles = makeStyles((theme) => ({\n  nominatedListBox: {\n    height: \"80vh\",\n    maxHeight: \"100vh\",\n    overflow: \"auto\",\n    margin: 20,\n  },\n  button: {\n    margin: theme.spacing(1),\n    marginLeft: 50,\n    backgroundColor: \"#e53935\",\n    color: \"white\",\n  },\n}));\n\nconst NominationList = ({ nominatedMovies, setNominatedMovies }) => {\n\n  const classes = useStyles();\n  const canAddNomination = nominatedMovies.length === 5\n\n  const handleClearList = () => {\n    setNominatedMovies([]);\n  };\n\n\n\n  const handleRemove = (nominatedMovies, movieID) => {\n    if (nominatedMovies === undefined || nominatedMovies === 0) {\n      return [];\n    } else {\n      let newState = nominatedMovies.filter((m) => movieID !== m.imdbID);\n      setNominatedMovies(newState);\n    }\n  };\n\n  const nominationInfo = (\n    <>\n      {nominatedMovies?.length ? (\n        <>\n          <Grid item xs={6}>\n            <Typography\n              component=\"h6\"\n              style={{ display: \"flex\", marginLeft: \"16px\" }}\n            >\n              {nominatedMovies ? nominatedMovies?.length : \"0\"} Nominations\n            </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Button\n              variant=\"outlined\"\n              className={classes.button}\n              startIcon={<DeleteIcon />}\n              size=\"small\"\n              onClick={handleClearList}\n            >\n              CLEAR LIST\n            </Button>\n          </Grid>\n        </>\n      ) : (\n        <Grid item>\n          <Typography\n            component=\"h6\"\n            style={{ display: \"flex\", margin: \"16px\" }}\n          >\n            You haven't nominated any movies yet.\n          </Typography>\n        </Grid>\n      )}\n    </>\n  );\n\n  return (\n    <SnackbarProvider>\n      <ReachedFiveNominations show={canAddNomination}/>\n      <Card className={classes.nominatedListBox}>\n        <CardHeader\n          title=\"Nominations List\"\n          subheader=\"Maximum 5 nominations allowed.\"\n        />\n        <Divider variant=\"middle\" />\n        <Grid container alignItems=\"center\">\n          {nominationInfo}\n        </Grid>\n        <Divider variant=\"middle\" />\n        <CardContent>\n          <List>\n            {nominatedMovies?.length ? (\n              nominatedMovies.map((movie, idx) => (\n                <NominatedListItem\n                  key={idx}\n                  movie={movie}\n                  handleRemove={handleRemove}\n                  nominationList={nominatedMovies}\n                />\n              ))\n            ) : (\n              <></>\n            )}\n          </List>\n        </CardContent>\n      </Card>\n    </SnackbarProvider>\n  );\n};\n\nexport default NominationList;\n","export default __webpack_public_path__ + \"static/media/background.2735a66c.jpg\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport backgroundImg from \"../images/background.jpg\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainFeaturedPost: {\n    position: \"relative\",\n    backgroundColor: theme.palette.grey[800],\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing(3),\n    backgroundImage: `url(${backgroundImg})`,\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\",\n  },\n  overlay: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    backgroundColor: \"rgba(0,0,0,.7)\",\n  },\n  mainFeaturedPostContent: {\n    position: \"relative\",\n    padding: theme.spacing(3),\n    [theme.breakpoints.up(\"md\")]: {\n      padding: theme.spacing(12),\n    },\n  },\n}));\n\nexport const Header = () => {\n  const classes = useStyles();\n  return (\n    <Paper\n      className={classes.mainFeaturedPost}\n      style={{ backgroundImage: backgroundImg }}\n    >\n      <div className={classes.overlay} />\n      <Grid container>\n        <Grid item md={12}>\n          <div className={classes.mainFeaturedPostContent}>\n            <Typography\n              component=\"h1\"\n              variant=\"h3\"\n              color=\"inherit\"\n              gutterBottom\n              style={{ fontWeight: \"bold\" }}\n            >\n              {\"The Shoppies: Movie Awards For Entrepreneurs\"}\n            </Typography>\n            <Typography variant=\"h5\" color=\"inherit\" paragraph>\n              {\"Nominate Your Favorite Movies For The Shoppies Movie Award!\"}\n            </Typography>\n          </div>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport SearchBar from \"./components/SearchBar\";\nimport MovieList from \"./components/MovieList\";\nimport Footer from \"./components/Footer\";\nimport NominationList from \"./components/NominationList\";\nimport { Header } from \"./components/Header\";\nimport { Grid, CssBaseline, createMuiTheme } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst App = () => {\n\n  const [movies, setMovies] = useState([]);\n  const [nominatedMovies, setNominatedMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [page, setPage] = useState(1)\n  const [totalResult, setTotalResult] = useState(0)\n\n  useEffect(() => {\n    getMovies(searchQuery, page)\n  }, [searchQuery, page]);\n\n  const getMovies = (query, page) => {\n    fetch(`https://www.omdbapi.com/?apikey=a48618b7&type=movie&s=${query}&page=${page}`)\n    .then((res) => res.json())\n    .then((data) => {\n      setMovies(data.Search)\n      setTotalResult(data.totalResults)\n    });\n  }\n\n  const handlePageChange = (event, value) => {\n    setPage(value)\n    getMovies(searchQuery, page)\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Header />\n      <CssBaseline />\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <SearchBar query={searchQuery} setQuery={setSearchQuery} />\n        </Grid>\n        <Grid item xs={12} sm={6} md={8} lg={8} xl={8}>\n          <MovieList\n            movies={movies}\n            nominateMovie={setNominatedMovies}\n            nominatedMovies={nominatedMovies}\n            query={searchQuery}\n            page={page}\n            handlePageChange={ handlePageChange }\n            totalResult={totalResult}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4} lg={4} xl={4}>\n          <NominationList\n            nominatedMovies={nominatedMovies}\n            setNominatedMovies={setNominatedMovies}\n          />\n        </Grid>\n      </Grid>\n      <Footer />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}